LIBNAME mydata "/home/u64042931/test/multilevel";

data MYDATA.ADLupdate;
    set MYDATA.ADL;
    
    /* Create new binary variable */
    if ADL <= 19  then ADL_binary = 1;
    else ADL_binary = 0;
    
    /* Alternative syntax that does the same thing */
    /* ADL_binary = (ADL_score <= 22); */
run;

proc genmod data=MYDATA.ADLupdate descending;
model ADL_binary = logtime neuro housing age NEURO*logtime age*logtime / dist=binomial;
run;

proc glimmix data=MYDATA.ADLupdate method=laplace;
  class NEURO housing ID;
  model ADL_binary(event='1') = logtime NEURO housing age NEURO*logtime / 
        dist=binomial solution;
  random intercept NEURO / type=un subject=ID solution;
  ods output CovParms=FullCovParms;
  covtest 'Test Random Slopes' 0 . 0; /* Tests if slope variances = 0 */
run;

proc glimmix data=MYDATA.ADLupdate method=laplace;
class NEURO housing ID;
model ADL_binary (event = '1') = logtime neuro housing NEURO*logtime / dist=binomial solution;
random intercept / subject= ID;
estimate 'Test Random Slopes' NEURO*logtime 1 -1;
run;

data MYDATA.ADLupdate;
do NEURO= 0 to 1 by 1;
   do subject=1 to 1000 by 1;
     b=sqrt(1.9616)*rannor(-1);
     do logtime=0 to 2.5 by 0.1;
    if NEURO=0 then y=exp(-1.7970 + 0.8083 + 0.5512*logtime + 0.008117*logtime + b)/(1+exp(-1.7970 + 0.8083 + 0.5512*logtime + 0.008117*logtime + b));
               else y=exp(-1.7970 + 0.5512*logtime + b)/(1+exp(-1.7970 + 0.5512*logtime +b));
          output;
    end;
  end;
end;

proc sort data= MYDATA.ADLupdate;
by logtime NEURO;
run;

proc means data=MYDATA.ADLupdate;
var y;
by logtime NEURO;
output out=out;
run;

proc gplot data= out;
plot y*logtime = NEURO;
run;quit;run;


proc glimmix data=MYDATA.ADLupdate method=quad;
  class NEURO housing ID;
  model ADL_binary(event='1') = logtime NEURO / dist=binomial solution;
  random intercept / subject=ID;
run;

proc freq data=MYDATA.ADLupdate;
  tables NEURO*ADL_binary / nocol nopercent;
run;